list.files(all.files = TRUE)
file.show("DESCRIPTION")
file.show('Read-and-delete-me')
file.remove('Read-and-delete-me')
setwd("~/Documents/Code/2020/BayesianPain/inst/stan")
setwd("~/Documents/Code/2020/BayesianPain/R")
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
devtools::install_github("r-lib/devtools")
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
devtools::install_github("r-lib/devtools")
install.packages("xml2")
install.packages("libxml-2.0")
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
devtools::install_github("r-lib/devtools")
library(devtools)
has_devel()
#> '/Library/Frameworks/R.framework/Resources/bin/R' --vanilla CMD SHLIB foo.c
#>
#> clang -I/Library/Frameworks/R.framework/Resources/include -DNDEBUG
#>   -I/usr/local/include -I/usr/local/include/freetype2 -I/opt/X11/include
#>   -fPIC  -Wall -mtune=core2 -g -O2  -c foo.c -o foo.o
#> clang -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup
#>   -single_module -multiply_defined suppress -L/usr/local/lib -o foo.so foo.o
#>   -F/Library/Frameworks/R.framework/.. -framework R -Wl,-framework
#>   -Wl,CoreFoundation
[1] TRUE
library(devtools)
has_devel()
.libPaths()
center_scale <- function(exp_data){
clean_data = data.frame()
for (s in unique(exp_data$S)){
subject_data       = subset(exp_data, S == s)
subject_fixed_data = subset(subject_data, Std == 0)
mod                <- lm(X ~ R, data = subject_fixed_data)
subject_data$R     <- predict(mod, data.frame(R = subject_data$R))
clean_data         <- rbind(clean_data,subject_data)
}
return(clean_data)
}
exp_data <- data.frame(read.csv('data/exp_1_data.csv', header = TRUE))
exp_data_raw <- data.frame(read.csv('data/exp_1_data.csv', header = TRUE))
exp_data <- center_scale(exp_data_raw)
View(center_scale)
packageVersion("loo")
packageVersion(loo)
packageVersion("ggplot2")
packageVersion("resphape2")
packageVersion("reshape2")
packageVersion("stats4")
packageVersion("viridis")
packageVersion("viridis")
packageVersion("knitr")
devtools::load_all(".")
roxygen2::roxygenize()
packageVersion("ggplot2")
devtools::load_all(".")
devtools::load_all(".")
roxygen2::roxygenize()
devtools::load_all(".")
roxygen2::roxygenize()
roxygen2::roxygenize()
devtools::load_all(".")
roxygen2::roxygenize()
example(source)
roxygen2::roxygenize()
roxygen2::roxygenize(load_code = sourceDir)
devtools::load_all(".")
devtools::load_all(".")
?center_scale
devtools::load_all(".")
roxygen2::roxygenize(load_code = sourceDir)
example(source)
roxygen2::roxygenize(load_code = sourceDir)
rlang::last_error()
example(source)
roxygen2::roxygenize(load_code = sourceDir)
devtools::load_all(".")
example(source)
roxygen2::roxygenize(load_code = sourceDir)
roxygen2::roxygenize()
roxygen2::roxygenize(load_code = sourceDir)
update.packages()
devtools::load_all(".")
roxygen2::roxygenize(load_code = sourceDir)
example(source)
roxygen2::roxygenize(load_code = sourceDir)
example(source)
roxygen2::roxygenize(load_code = sourceDir)
roxygen2::roxygenize()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
rstan::options(mc.cores = parallel::detectCores())
?options
options(mc.cores = parallel::detectCores())
source('~/Documents/Code/2020/test.R', echo=TRUE)
devtools::load_all(".")
output <- BayesianPain::fit_models(models, stan_data)
